@attribute [Route(RelativePath)]

@inherits VyprCore.RazorComponents.Base.VyprPageBase

@layout VyprLoginLandingLayout

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Radzen.Blazor
@using VyprCore.RazorComponents.Buttons
@using VyprCore.RazorComponents.Containers
@using VyprCore.RazorComponents.Forms
@using VyprCore.Client.Extensions
@using VyprCore.RazorComponents.Loaders
@using VyprCore.RazorComponents.Layouts
@using VyprCore.Models.ViewModels

<VyprForm TModel=@InvitationalCreatePasswordViewModel Model=@Model SubmitText="Create" ShowResetButton=@false ShowButtonsBindTo=@ResponseMessage.IsOkResponse() @bind-WaitingOnResponse=@WaitingOnResponse OnValidSubmit=@OnProcessCreatePasswordAsync Class="vypr-icp vypr-app-icp">
    @if (!string.IsNullOrEmpty(Response))
    {
        <VyprValidationResults>
            <VyprValidationResult Success="@false">@Response</VyprValidationResult>
        </VyprValidationResults>
    }

    <div class="vypr-icp-inputs vypr-app-icp-inputs">
        @if (ResponseMessage.IsOkResponse())
        {
            <b><span>Password updated</span></b>

            <p>
                Your password has been successfully updated, please sign in using your updated credentials.
            </p>
            <div class="vypr-loginlandinglinks vypr-inv-cr-link" style="margin-bottom:-1rem;">
                <VyprButtonPrimary Text="Login" OnClick=@GoToLoginPage />
            </div>
        }
        else
        {
            <p>
                Create a new password login for your new account.
            </p>

            <VyprTextBox @bind-Value=@Model.Password IsReadOnly=@WaitingOnResponse UsePasswordMask=@true Placeholder="********" />
            <ValidationMessage For="@(() => Model.Password)" />

            <VyprTextBox @bind-Value=@Model.ConfirmPassword IsReadOnly=@WaitingOnResponse UsePasswordMask=@true Placeholder="********" />
            <ValidationMessage For="@(() => Model.ConfirmPassword)" />
        }
    </div>
</VyprForm>