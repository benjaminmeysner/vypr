<!-- Account Management Page - Change password after it has been created -->
@attribute [Route(RelativePath)]
@attribute [Authorize]

@inherits RazorComponents.Base.VyprPageBase

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using VyprCore.Client.Extensions
@using VyprCore.RazorComponents.Forms
@using VyprCore.RazorComponents.Loaders
@using VyprCore.Models.ViewModels

@if (!_initialised)
{
    <VyprPageSpinner />
}
else
{
    <VyprForm TModel=@ChangePasswordViewModel Model=@Model SubmitText="Save" ShowResetButton=@false ShowButtonsBindTo=@ResponseMessage.IsOkResponse() @bind-WaitingOnResponse=@WaitingOnResponse OnValidSubmit=@OnProcessChangePasswordAsync Class="vypr-cp vypr-app-cp">
        <div class="vypr-cp-inputs vypr-app-cp-inputs">
            <p>
                Please confirm your current password before changing.
            </p>

            @if (ResponseMessage.IsOkResponse())
            {
                <b><span>Password updated</span></b>

                <p>
                    <hr />
                    Your password has been successfully updated, please sign in using your updated credentials.
                </p>
            }
            else
            {
                <VyprTextBox @bind-Value=@Model.OldPassword UsePasswordMask=@true IsReadOnly=@WaitingOnResponse Placeholder="********" />
                <ValidationMessage For="@(() => Model.OldPassword)" />

                <VyprTextBox @bind-Value=@Model.NewPassword UsePasswordMask=@true IsReadOnly=@WaitingOnResponse Placeholder="********" />
                <ValidationMessage For="@(() => Model.NewPassword)" />

                <VyprTextBox @bind-Value=@Model.ConfirmNewPassword UsePasswordMask=@true IsReadOnly=@WaitingOnResponse Placeholder="********" />
                <ValidationMessage For="@(() => Model.ConfirmNewPassword)" />
            }
        </div>
    </VyprForm>
}