@attribute [Route(RelativePath)]

@inherits RazorComponents.Base.VyprPageBase

@layout VyprLoginLandingLayout

@using Microsoft.AspNetCore.Components.Forms
@using Radzen.Blazor
@using VyprCore.Client.Extensions
@using VyprCore.RazorComponents.Buttons
@using VyprCore.RazorComponents.Containers
@using VyprCore.RazorComponents.Forms
@using VyprCore.RazorComponents.Pages.Error
@using VyprCore.RazorComponents.Layouts
@using VyprCore.Models.ViewModels

<VyprForm TModel=@ResetPasswordViewModel Model=@Model SubmitText="Reset Password" ShowResetButton=@false ShowButtonsBindTo=@ResponseMessage.IsOkResponse() @bind-WaitingOnResponse=@WaitingOnResponse OnValidSubmit=@OnProcessResetPasswordAsync Class="vypr-rp vypr-app-rp">
    <div class="vypr-rp-inputs vypr-app-rp-inputs">
        @if (ResponseMessage.IsOkResponse())
        {
            <p>
                Your password was successfully reset.
            </p>
            <div class="vypr-btnset vypr-app-btnset">
                <VyprButtonPrimary Text="Return to login" OnClick=@(() => NavigationManager.NavigateTo($"/login")) />
            </div>
        }
        else
        {
            <VyprTextBox @bind-Value=@Model.Password IsReadOnly=@WaitingOnResponse UsePasswordMask=@true Placeholder="********" />
            <ValidationMessage For="@(() => Model.Password)" />

            <VyprTextBox @bind-Value=@Model.ConfirmPassword IsReadOnly=@WaitingOnResponse UsePasswordMask=@true Placeholder="********" />
            <ValidationMessage For="@(() => Model.ConfirmPassword)" />
        }
    </div>
</VyprForm>
